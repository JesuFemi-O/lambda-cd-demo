name: Python Linting with Black

on:
  pull_request:
    types: [ opened, reopened, synchronize, edited ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.10.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black
    
    - name: Get changed python files between base and head
      run: >
        echo "CHANGED_FILES=$(echo $(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} -- | grep \.py))" >> $GITHUB_ENV
    
    - name: Lint with Black
      if: ${{ env.CHANGED_FILES }}
      run: |
        if [ -n "${{ env.CHANGED_FILES }}" ]; then
          black --check "${{ env.CHANGED_FILES }}"
        else
          echo "No Python files modified."
        fi

      continue-on-error: true

    - name: Generate annotations
      if: failure()
      run: |
        if [ -n "${{ env.CHANGED_FILES }}" ]; then
          for file in ${{ env.CHANGED_FILES }}; do
            errors=$(black --check "$file" | awk -F ":" '{print $3":"$4}')
            IFS=$'\n' read -rd '' -a errors_array <<<"$errors"
            for err in "${errors_array[@]}"; do
              IFS=: read -r line col <<<"$err"
              echo "::error file=${file},line=${line},col=${col}::Black formatting issue found in ${file}."
            done
          done
        fi
